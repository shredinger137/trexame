[{"C:\\Users\\clewi\\git\\trexame\\site\\src\\index.js":"1","C:\\Users\\clewi\\git\\trexame\\site\\src\\App.js":"2","C:\\Users\\clewi\\git\\trexame\\site\\src\\serviceWorker.js":"3","C:\\Users\\clewi\\git\\trexame\\site\\src\\config.js":"4","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Stats.js":"5","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Dashboard.js":"6","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Challenges.js":"7","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Home.js":"8","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Admin.js":"9","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Login.js":"10","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Header.js":"11","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Signup.js":"12","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\NewChallenge.js":"13","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Achievements.js":"14","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\ResetPassword.js":"15","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\AccountSettings.js":"16","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\AuthProvider.js":"17"},{"size":789,"mtime":1612835885050,"results":"18","hashOfConfig":"19"},{"size":3681,"mtime":1612835885034,"results":"20","hashOfConfig":"19"},{"size":5086,"mtime":1597604017354,"results":"21","hashOfConfig":"19"},{"size":471,"mtime":1609360554977,"results":"22","hashOfConfig":"19"},{"size":3680,"mtime":1606276534171,"results":"23","hashOfConfig":"19"},{"size":8518,"mtime":1612835885054,"results":"24","hashOfConfig":"19"},{"size":4505,"mtime":1612835885053,"results":"25","hashOfConfig":"19"},{"size":333,"mtime":1609658188406,"results":"26","hashOfConfig":"19"},{"size":6492,"mtime":1612835885052,"results":"27","hashOfConfig":"19"},{"size":6113,"mtime":1612836160192,"results":"28","hashOfConfig":"19"},{"size":3291,"mtime":1612835885036,"results":"29","hashOfConfig":"19"},{"size":4004,"mtime":1612835885042,"results":"30","hashOfConfig":"19"},{"size":1971,"mtime":1612835885039,"results":"31","hashOfConfig":"19"},{"size":3289,"mtime":1612835885035,"results":"32","hashOfConfig":"19"},{"size":4530,"mtime":1612835885041,"results":"33","hashOfConfig":"19"},{"size":222,"mtime":1612835885051,"results":"34","hashOfConfig":"19"},{"size":267,"mtime":1612835885035,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ekv9lp",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\clewi\\git\\trexame\\site\\src\\index.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\App.js",[],["77","78"],"C:\\Users\\clewi\\git\\trexame\\site\\src\\serviceWorker.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\config.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Stats.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Dashboard.js",["79","80"],"/* eslint eqeqeq: \"off\", no-extend-native: \"off\", no-throw-literal: \"off\" */\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport '../components/Signup';\r\nimport { config } from \"../config.js\";\r\nimport Achievements from '../components/Achievements';\r\n\r\nimport \"../css/common.css\"\r\nimport \"../css/dashboard.css\"\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n\r\n    state = {\r\n        marathonName: \"\",\r\n        targetMiles: 0,\r\n        userData: {\r\n            progress: {},\r\n            marathon: \"bridging\",\r\n            name: \"\"\r\n        },\r\n        progressEntries: {},\r\n        progressSorted: [],\r\n        progressTotal: 0,\r\n        progressTotalPercent: 0,\r\n        marathonDistance: 0,\r\n        challengeId: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.initDate();\r\n        this.getMarathonData();\r\n        //  this.getUserData();\r\n    }\r\n\r\n    componentDidUpdate(prevprops, prevstate) {\r\n        if (this.props.userId != prevprops.userId) {\r\n            this.getUserData();\r\n        }\r\n\r\n    }\r\n\r\n    initDate() {\r\n        var d = new Date();\r\n        var month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        document.getElementById('date').value = [year, month, day].join('-');\r\n\r\n    }\r\n\r\n    handleAddMiles(event) {\r\n        event.preventDefault();\r\n        var newMiles = document.getElementById(\"addMiles\").value;\r\n        document.getElementById(\"addMiles\").value = \"\";\r\n        var newDate = document.getElementById(\"date\").value;\r\n        var unixTime = ((new Date(newDate)).getTime());\r\n        this.initDate();\r\n        axios.get(`${config.api}/updateprogress?user=${this.props.userId}&distance=${newMiles}&date=${unixTime}&challenge=${this.state.challengeId}`).then(res => {\r\n            this.getUserData()\r\n        }\r\n\r\n        )\r\n    }\r\n\r\n    handleDeleteDate(value) {\r\n        axios.get(`${config.api}/updateprogress?user=${this.props.userId}&distance=0&date=${value}&challenge=${this.state.challengeId}`).then(res => {\r\n            this.getUserData()\r\n        }\r\n        )\r\n    }\r\n\r\n\r\n    getUserData() {\r\n        axios.get(`${config.api}/getUserChallengeData?user=${this.props.userId}&challenge=${this.state.challengeId}`).then(res => {\r\n            this.setState({ progressEntries: res.data });\r\n            this.setState({ progressSorted: this.getDates() });\r\n        })\r\n    }\r\n\r\n    getMarathonData() {\r\n        var challengeId = this.getMarathonId();\r\n        if (challengeId) {\r\n            this.setState({ challengeId: challengeId });\r\n        }\r\n        axios.get(`${config.api}/getChallengeData?challengeId=${challengeId}`).then(res => {\r\n            this.setState({\r\n                challengeName: res.data.challengeName,\r\n                marathonDistance: res.data.targetMiles,\r\n                challengeAchievements: res.data.achievements,\r\n                challengeUnits: res.data.targetUnits\r\n            });\r\n\r\n            this.getUserData()\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getMarathonId() {\r\n        const params = new URLSearchParams(window.location.search);\r\n        if (params && params.get(\"challenge\")) {\r\n            return params.get(\"challenge\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handlePublicOption() {\r\n        var value = document.getElementById(\"publicToggle\").checked;\r\n        axios.get(`${config.api}/updatePublicOption?user=${this.state.id}&value=${value}`);\r\n    }\r\n\r\n    handleNotFound() {\r\n        document.getElementById(\"notFound\").style.display = \"block\";\r\n        document.getElementById(\"updateMilesForm\").style.display = \"none\";\r\n    }\r\n\r\n    getDates() {\r\n\r\n        var total = 0;\r\n        var datesArray = [];\r\n\r\n        for (var date in this.state.progressEntries) {\r\n            var timestamp = new Date(Math.floor(date))\r\n            var dateString = (timestamp.getMonth() + 1) + \"-\" + (timestamp.getUTCDate()) + \"-\" + (timestamp.getFullYear());\r\n            datesArray.push([dateString, this.state.progressEntries[date], date]);\r\n            total = total + this.state.progressEntries[date];\r\n        }\r\n        this.setState({ progressTotal: total, progressTotalPercent: Math.floor(((total / this.state.marathonDistance)) * 100) });\r\n        return datesArray;\r\n    }\r\n\r\n    handleUpdateMarathon(event) {\r\n        event.preventDefault();\r\n        var newMarathonShortname = document.getElementById(\"marathon\").value;\r\n        axios.get(`${config.api}/updatemarathon?user=${this.state.id}&marathon=${newMarathonShortname}`).then(res => {\r\n            this.getID();\r\n        });\r\n    }\r\n\r\n\r\n    openOptionsModal() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <h2>{this.state.challengeName}</h2>\r\n                <div>\r\n                    <div id=\"progress-header\" style={{ textAlign: \"left\", width: \"75vw\", margin: \"0 auto\", marginBottom: \"10px\" }}>\r\n                        <span style={{ fontWeight: 700 }}>Overall<br /></span>\r\n                        <span>{this.state.progressTotal} of {this.state.marathonDistance}  {this.state.challengeUnits} ({this.state.progressTotalPercent}%)</span>\r\n                    </div>\r\n                    <div id=\"progress\">\r\n                        <div id=\"progressBar\" style={{ width: this.state.progressTotalPercent + \"%\", maxWidth: \"100%\" }}>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"width-25 width-75-sm\" style={{ margin: \"0 auto\", marginTop: \"30px\" }}>\r\n                        <h4 style={{ marginBlockStart: 0, marginBlockEnd: 0, marginBottom: \"5px\" }}>New Entry</h4>\r\n                        <form id=\"updateMilesForm\" className=\"grid-2\" onSubmit={this.handleAddMiles.bind(this)}>\r\n                            <label className=\"form-label\" htmlFor=\"addMiles\" style={{ textAlign: \"right\", marginRight: \"15px\" }}>\r\n                                Distance ({this.state.challengeUnits})\r\n                            </label>\r\n                            <input\r\n                                className=\"width-100 px-3 py-2 form-input-shadow\"\r\n                                id=\"addMiles\"\r\n                                type=\"number\"\r\n                            />\r\n                            <label className=\"form-label\" htmlFor=\"date\" style={{ textAlign: \"right\", marginRight: \"15px\" }}>\r\n                                Date\r\n                            </label>\r\n                            <input\r\n                                className=\"width-100 px-3 py-2 form-input-shadow\"\r\n                                id=\"date\"\r\n                                type=\"date\"\r\n                            />\r\n                            <div></div>\r\n                            <button type=\"submit\" className=\"submit-button-round-blue\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                    <br />\r\n                    <details>\r\n                        <summary>View Entries</summary>\r\n                        <table>\r\n                            <tbody>\r\n                                {this.state.progressSorted.map(\r\n                                    date => (\r\n                                        <tr key={date[0]}>\r\n                                            <td><span>{date[0]}:{\"  \"}</span></td><td><span>{\"  \"}{date[1]} {this.state.challengeUnits} </span><span onClick={() => { this.handleDeleteDate(date[2]) }}>[Delete]</span></td>\r\n                                        </tr>\r\n                                    )\r\n\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </details>\r\n                    <div id=\"notFound\" style={{ display: \"none\" }}><p>The requested ID was not found. Please check your email for the correct link, or write to <a href=\"mailto:admin@rrderby.org\">admin@rrderby.org</a> for help.</p></div>\r\n                    <br />\r\n                    <h3>Achievements</h3>\r\n                    <Achievements\r\n                        miles={this.state.progressTotal}\r\n                        marathon={this.state.userData.marathon}\r\n                        achievements={this.state.challengeAchievements}\r\n                        challengeId={this.state.challengeId}\r\n                    />\r\n                    <br /><br />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Challenges.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Home.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Admin.js",["81","82","83"],"/* eslint eqeqeq: \"off\", no-extend-native: \"off\", no-throw-literal: \"off\" */\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { config } from \"../config.js\";\r\n\r\nclass Admin extends React.Component {\r\n\r\n  state = {\r\n    challengeId: \"\",\r\n    challengeData: {},\r\n    challengeAchievements: [],\r\n    newSubmissionImage: \"\"\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getChallengeId();\r\n  }\r\n\r\n  componentDidUpdate(prevprops, prevstate) {\r\n    if (prevstate.challengeId != this.state.challengeId) {\r\n      this.getChallengeData();\r\n    }\r\n  }\r\n\r\n  getChallengeId() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    if (params && params.get(\"challenge\")) {\r\n      this.setState({ challengeId: params.get(\"challenge\") });\r\n      this.getChallengeData();\r\n    } else return false;\r\n  }\r\n\r\n  getChallengeData() {\r\n    axios.get(`${config.api}/getChallengeData?challengeId=${this.state.challengeId}&admin=true`).then(res => {\r\n      this.setState({ challengeData: res.data });\r\n      if (res.data.achievements) {\r\n        this.setState({ challengeAchievements: res.data.achievements });\r\n      }\r\n    })\r\n  }\r\n\r\n  saveData(e) {\r\n    e.preventDefault();\r\n    var challengeDataUpdated = `challengeName=${document.getElementById(\"name\").value}&targetMiles=${document.getElementById(\"miles\").value}&targetUnits=${document.getElementById(\"units\").value}&description=${document.getElementById(\"description\").value}`;\r\n    axios.get(`${config.api}/updateChallengeData?challengeId=${this.state.challengeId}&${encodeURI(challengeDataUpdated)}`).then(res => {\r\n\r\n    })\r\n\r\n  }\r\n\r\n  //TODO: Handle response on both of these.\r\n\r\n  submitNewAchievement(e) {\r\n    e.preventDefault();\r\n    var newAchivementData = `name=${document.getElementById(\"newAchievementName\").value}&distance=${document.getElementById(\"newAchievementDistance\").value}&description=${document.getElementById(\"newAchievementDescription\").value}&image=${this.state.newSubmissionImage}`;\r\n    axios.get(`${config.api}/submitNewAchievement?challengeId=${this.state.challengeId}&${encodeURI(newAchivementData)}`).then(res => {\r\n      this.getChallengeData();\r\n      document.getElementById(\"newAchievementName\").value = \"\";\r\n      document.getElementById(\"newAchievementDistance\").value = \"\";\r\n      document.getElementById(\"newAchievementDescription\").value = \"\";\r\n\r\n    })\r\n  }\r\n\r\n  handleImageUpload(e) {\r\n\r\n    e.preventDefault();\r\n    var file = e.target.files[0];\r\n    const data = new FormData();\r\n    data.append('file', file);\r\n    data.append('challengeId', this.state.challengeId);\r\n    const headerConfig = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    axios.post(`${config.api}/uploadImage?challengeId=${this.state.challengeId}`, data, headerConfig).then(res => {\r\n      if (res && res.data) {\r\n        this.setState({ newSubmissionImage: res.data });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteAchievement(achievementId) {\r\n    axios.get(`${config.api}/deleteAchievement?challengeId=${this.state.challengeId}&achievementId=${achievementId}`).then(res => {\r\n      this.getChallengeData();\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <p>Challenge Admin</p>\r\n        <br /><br />\r\n        <form id=\"challengeForm\" onSubmit={this.saveData.bind(this)}>\r\n          <div className=\"form grid-2 formWrapper\" style={{ margin: \"0 auto\", width: \"80vw\" }}>\r\n            <label>\r\n              Challenge Name:\r\n            </label>\r\n            <input type=\"text\" id=\"name\" defaultValue={this.state.challengeData.challengeName} />\r\n            <label>Target Distance:</label>\r\n            <input type=\"number\" id=\"miles\" defaultValue={this.state.challengeData.targetMiles}></input>\r\n            <label>Target Metric:</label>\r\n            <input type=\"text\" id=\"units\" defaultValue={this.state.challengeData.targetUnits}></input>\r\n            <label>Description:</label>\r\n            <textarea id=\"description\" defaultValue={this.state.challengeData.description}></textarea>\r\n          </div>\r\n          <br />\r\n          <input type=\"submit\" value=\"Update\" />\r\n        </form>\r\n        <br /><br />\r\n        <p>Challenge Achievements</p>\r\n        <br />\r\n        <form id=\"newAchivementForm\" onSubmit={this.submitNewAchievement.bind(this)}>\r\n          <div className=\"achievementEditWrapper form grid-2 formWrapper\" style={{ margin: \"0 auto\", width: \"80vw\" }}>\r\n            <label>Name:</label>\r\n            <input id=\"newAchievementName\" required>\r\n            </input>\r\n            <label>Distance (Miles): </label>\r\n            <input type=\"number\" id=\"newAchievementDistance\" required></input>\r\n            <label>Description:</label>\r\n            <textarea id=\"newAchievementDescription\"></textarea>\r\n            <label>Image:</label>\r\n            <input type=\"file\" onChange={this.handleImageUpload.bind(this)} accept=\"image/png, image/jpeg\" required></input>\r\n          </div>\r\n\r\n\r\n          <input type=\"submit\" value=\"Add New Achivement\" />\r\n          <br />\r\n\r\n        </form>\r\n        {this.state.newSubmissionImage ?\r\n          <div className=\"achievementsItemWrapper\">\r\n            <img src={`${config.uploadedImagesRoot}/${this.state.challengeId}/${this.state.newSubmissionImage}`} alt=\"New achievment preview\" style={{ width: \"150px\" }}></img>\r\n          </div>\r\n          : null}\r\n        {this.state.challengeAchievements.map(achievement => (\r\n          <form>\r\n            <div className=\"achievementEditWrapper form grid-2 formWrapper\" style={{ margin: \"0 auto\", width: \"80vw\" }}>\r\n              <label>Name:</label>\r\n              <span style={{ textAlign: \"left\" }}>\r\n                {achievement.name}\r\n              </span>\r\n              <label>Distance (Miles): </label>\r\n              <span style={{ textAlign: \"left\" }}>\r\n                {achievement.distance}\r\n              </span>\r\n              <label>Description:</label>\r\n              <span style={{ textAlign: \"left\" }}>{achievement.description}</span>\r\n              <label>Image:</label>\r\n              <img src={`${config.uploadedImagesRoot}/${this.state.challengeId}/${achievement.image}`} alt={`Badge for ${achievement.name}`} style={{ width: \"150px\" }} />\r\n              <label></label>\r\n              <span style={{ textAlign: \"left\" }} onClick={() => this.deleteAchievement(achievement.ident)}>Delete</span>\r\n            </div>\r\n            <br />\r\n          </form>\r\n        ))}\r\n\r\n\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Login.js",["84"],"C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Header.js",["85","86","87"],"import React, {useEffect, useState} from 'react';\r\nimport '../css/menu.css';\r\nimport { AuthCheck } from 'reactfire';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from 'firebase'\r\nimport { useAuth, useUser } from 'reactfire';\r\n\r\n\r\n/*\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n        //uncomment to get a bunch of test entries in terminal\r\n        //  document.getElementById(\"terminalData\").innerHTML = `<span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br />`\r\n    })\r\n\r\n    */\r\n\r\n\r\n\r\nvar Header = (props) => {\r\n\r\n    const { data: user } = useUser();\r\n   \r\n    function logOut() {\r\n        firebase.auth().signOut();\r\n      }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"menuWrapper\">\r\n\r\n                <div className=\"menuSubWrapper roboto\">\r\n\r\n\r\n\r\n                    {user ?\r\n                        <span className=\"user lightText\">{user.displayName}</span>\r\n                        :\r\n                        <Link to=\"/login\" className=\"user roboto\">Login</Link>\r\n                    }\r\n\r\n                    <ul id=\"menu-list\">\r\n                        <AuthCheck>\r\n                            <li><Link to=\"/challenges\">Challenges</Link></li>\r\n                            <li><Link to=\"/account\">Account</Link></li>\r\n                        </AuthCheck>\r\n\r\n                        \r\n                        {props.isLoggedIn ?\r\n                            <li className=\"signUpButton roboto\"><span onClick={logOut} style={{ cursor: \"pointer\" }} className=\"roboto\">Log Out</span></li>\r\n                            :\r\n                            <li className=\"signUpButton roboto\"><Link to=\"/signup\">Sign Up</Link></li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div id=\"menuToggle\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Signup.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\NewChallenge.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Achievements.js",["88","89","90","91","92","93","94"],"/* eslint eqeqeq: \"off\", no-extend-native: \"off\", no-throw-literal: \"off\" */\r\n\r\nimport React from 'react';\r\nimport { config } from \"../config.js\";\r\n\r\nclass Achievements extends React.Component {\r\n\r\n    state = {\r\n        badges: [],\r\n        nextBadge: {},\r\n        showNextBadge: false\r\n    }\r\n\r\n    componentDidUpdate(prevprops, prevstate) {\r\n        if (prevprops.miles != this.props.miles || prevprops.marathon != this.props.marathon || prevprops.achievements != this.props.achievements || prevprops.challengeId != this.props.challengeId) {\r\n            this.getAllBadges();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllBadges();\r\n        console.log(this.props);\r\n    }\r\n\r\n\r\n    //I got confused on data structures here\r\n    //The key should be the mile marker? \r\n\r\n    getAllBadges() {\r\n        this.setState({ showNextBadge: false })\r\n\r\n        var gotNextBadge = false;\r\n\r\n        var allBadges = [];\r\n\r\n        var list = this.props.achievements;\r\n\r\n        console.log(list);\r\n     \r\n        if (list && Array.isArray(list) == true) {\r\n            for (var badge of list) {\r\n\r\n                //each 'badge' is an object\r\n                //each one has keys name, desc, image, mile\r\n\r\n                if (badge.distance && badge.distance <= this.props.miles) {\r\n                    allBadges.push(badge);\r\n                } else {\r\n                    if (gotNextBadge == false) {\r\n                        this.setState({ nextBadge: badge, showNextBadge: true });\r\n                        gotNextBadge = true;\r\n                        break;\r\n                    }\r\n                }\r\n                this.setState({ badges: allBadges });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"badgeGrid\">\r\n                {this.state.badges.map(badge =>\r\n                    <div key={badge.name}>\r\n                        <span className=\"badgeName\">{badge.name}</span><br />\r\n                        <img src={`${config.uploadedImagesRoot}/${this.props.challengeId}/${badge.image}`} alt={`${badge.name}: ${badge.desc}`}></img>\r\n                        <br />\r\n                        <span className=\"badgeDescription\">{badge.description}</span>\r\n                        <br />\r\n                        <span className=\"badgeDescription\">{badge.distance} Miles</span>\r\n                    </div>\r\n                )}\r\n                {this.state.showNextBadge == true ?\r\n                    <div>\r\n                        <span className=\"badgeName nextBadge\">{this.state.nextBadge.name}</span><br />\r\n                        <img className=\"nextBadge\" src={`${config.uploadedImagesRoot}/${this.props.challengeId}/${this.state.nextBadge.image}`} width=\"150px\" alt={`${this.state.nextBadge.name}: ${this.state.nextBadge.desc}`}></img>\r\n                        <br />\r\n                        <span className=\"badgeDescription nextBadge\">{this.state.nextBadge.description}</span>\r\n                        <br />\r\n                        <span className=\"badgeDescription\">Unlocked at {this.state.nextBadge.distance} Miles</span>\r\n                    </div>\r\n                    :\r\n\r\n                    \"\"\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Achievements;\r\n","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\ResetPassword.js",["95","96","97","98","99"],"/* eslint eqeqeq: \"off\", no-extend-native: \"off\", no-throw-literal: \"off\" */\r\n\r\nimport React, { useCallback, useState } from 'react';\r\nimport '../css/menu.css'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { config } from '../config'\r\nimport { useFirebaseApp } from 'reactfire';\r\nimport 'firebase/auth'\r\n\r\n\r\nvar ResetPassword = (props) => {\r\n\r\n    const firebase = useFirebaseApp();\r\n\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n    const [message, setMessage] = useState(null);\r\n\r\n\r\n    const sendResetEmail = event => {\r\n        event.preventDefault();\r\n        var email = document.getElementById(\"userEmail\").value;\r\n        document.getElementById(\"userEmail\").value = \"\";\r\n        \r\n        firebase.auth()\r\n            .sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setMessage(\"Please check your email for a reset link\")\r\n                setTimeout(() => { setEmailHasBeenSent(false) }, 3000);\r\n            })\r\n            .catch(() => {\r\n                setMessage(\"Error resetting password\");\r\n            });\r\n\r\n    };\r\n\r\n    function submitReset(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        axios.get(config.api + \"/resetpassword?email=\" + document.getElementById(\"email\").value).then(res => {\r\n            if (res && res.data) {\r\n                console.log(res.data);\r\n\r\n                if (res.data == true) {\r\n                    document.getElementById(\"form\").style.display = \"none\";\r\n                    document.getElementById(\"submittedText\").style.display = \"block\";\r\n                } else {\r\n                    document.getElementById(\"errorText\").style.display = \"block\";\r\n                }\r\n\r\n            }\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ margin: \"0, auto\", paddingTop: \"20px\" }}>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"width-25 w-50-md width-100-small\" style={{ padding: \"4px\" }}>\r\n                    <h3 className=\"title center\">Reset Password</h3>\r\n                    <form id=\"form\" className=\"signup-form\" onSubmit={sendResetEmail}>\r\n                        <div class=\"mb-4\">\r\n                            <label className=\"form-label\" htmlFor=\"email\">\r\n                                Email Address\r\n              </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"userEmail\"\r\n                                id=\"userEmail\"\r\n                                placeholder=\"Input your email\"\r\n                                className=\"width-100 px-3 py-2 form-input-shadow\"\r\n                            />\r\n                        </div>\r\n                        <div class=\"mb-6 text-center\">\r\n                            <button\r\n                                className=\"w-75 submit-button-round-blue\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Reset\r\n              </button>\r\n                        </div>\r\n                        <hr class=\"mb-6 border-t\" />\r\n                        <div id=\"alertText\"></div>\r\n\r\n                    </form>\r\n\r\n                    <div id=\"submittedText\" style={{ display: \"none\" }}>\r\n                        <p>If an account exists with that email, we'll send a link to reset your password. Be sure to check your spam folder. If you run into any issues, contact <a href=\"mailto:admin@rrderby.org\">admin@rrderby.org</a> for help.</p>\r\n                    </div>\r\n\r\n                    <div class=\"text-center\">\r\n                        <Link to=\"/signup\">\r\n                            <span\r\n                                className=\"link-text-secondary\"\r\n                            >\r\n                                No account? Create one here.\r\n              </span>\r\n                        </Link>\r\n                    </div>\r\n                    <div class=\"text-center\">\r\n                        <Link to=\"/login\"><span class=\"link-text-secondary\">Login</span></Link>\r\n                    </div>\r\n                    <div id=\"errorText\" style={{ display: \"none\" }}>\r\n                        <p>An error occured. If this persists, contact <a href=\"mailto:admin@rrderby.org\">admin@rrderby.org</a>.</p>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\AccountSettings.js",["100"],"import React from 'react';\r\nimport '../css/menu.css'\r\n\r\nvar AccountSettings = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <p>Haven't made this yet.</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AccountSettings;","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\AuthProvider.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":27,"column":9,"nodeType":"107","messageId":"108","endLine":27,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":38,"column":31,"nodeType":"111","messageId":"108","endLine":38,"endColumn":33},{"ruleId":"109","severity":1,"message":"110","line":20,"column":31,"nodeType":"111","messageId":"108","endLine":20,"endColumn":33},{"ruleId":"112","severity":1,"message":"113","line":136,"column":13,"nodeType":"114","endLine":136,"endColumn":141},{"ruleId":"112","severity":1,"message":"113","line":153,"column":15,"nodeType":"114","endLine":153,"endColumn":133},{"ruleId":"112","severity":1,"message":"113","line":147,"column":21,"nodeType":"114","endLine":147,"endColumn":102},{"ruleId":"115","severity":1,"message":"116","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":35},{"ruleId":"115","severity":1,"message":"120","line":6,"column":10,"nodeType":"117","messageId":"118","endLine":6,"endColumn":17},{"ruleId":"109","severity":1,"message":"110","line":13,"column":29,"nodeType":"111","messageId":"108","endLine":13,"endColumn":31},{"ruleId":"109","severity":1,"message":"110","line":13,"column":71,"nodeType":"111","messageId":"108","endLine":13,"endColumn":73},{"ruleId":"109","severity":1,"message":"110","line":13,"column":120,"nodeType":"111","messageId":"108","endLine":13,"endColumn":122},{"ruleId":"109","severity":1,"message":"110","line":13,"column":172,"nodeType":"111","messageId":"108","endLine":13,"endColumn":174},{"ruleId":"109","severity":1,"message":"121","line":38,"column":41,"nodeType":"111","messageId":"108","endLine":38,"endColumn":43},{"ruleId":"109","severity":1,"message":"121","line":47,"column":38,"nodeType":"111","messageId":"108","endLine":47,"endColumn":40},{"ruleId":"109","severity":1,"message":"121","line":73,"column":43,"nodeType":"111","messageId":"108","endLine":73,"endColumn":45},{"ruleId":"115","severity":1,"message":"122","line":3,"column":17,"nodeType":"117","messageId":"118","endLine":3,"endColumn":28},{"ruleId":"115","severity":1,"message":"123","line":17,"column":12,"nodeType":"117","messageId":"118","endLine":17,"endColumn":17},{"ruleId":"115","severity":1,"message":"124","line":17,"column":19,"nodeType":"117","messageId":"118","endLine":17,"endColumn":27},{"ruleId":"115","severity":1,"message":"125","line":18,"column":12,"nodeType":"117","messageId":"118","endLine":18,"endColumn":28},{"ruleId":"115","severity":1,"message":"126","line":39,"column":14,"nodeType":"117","messageId":"118","endLine":39,"endColumn":25},{"ruleId":"115","severity":1,"message":"127","line":6,"column":14,"nodeType":"117","messageId":"118","endLine":6,"endColumn":23},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-dupe-keys","Duplicate key 'marathonName'.","ObjectExpression","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useAuth' is defined but never used.","Expected '===' and instead saw '=='.","'useCallback' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'emailHasBeenSent' is assigned a value but never used.","'submitReset' is defined but never used.","'aFunction' is defined but never used.","no-global-assign","no-unsafe-negation"]