[{"C:\\Users\\clewi\\git\\trexame\\site\\src\\index.js":"1","C:\\Users\\clewi\\git\\trexame\\site\\src\\App.js":"2","C:\\Users\\clewi\\git\\trexame\\site\\src\\serviceWorker.js":"3","C:\\Users\\clewi\\git\\trexame\\site\\src\\config.js":"4","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Stats.js":"5","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Dashboard.js":"6","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Challenges.js":"7","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Home.js":"8","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Admin.js":"9","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Login.js":"10","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Header.js":"11","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Signup.js":"12","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\NewChallenge.js":"13","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Achievements.js":"14","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\ResetPassword.js":"15","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\AccountSettings.js":"16","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\AuthProvider.js":"17"},{"size":789,"mtime":1612835885050,"results":"18","hashOfConfig":"19"},{"size":2231,"mtime":1612934835624,"results":"20","hashOfConfig":"19"},{"size":5086,"mtime":1597604017354,"results":"21","hashOfConfig":"19"},{"size":471,"mtime":1609360554977,"results":"22","hashOfConfig":"19"},{"size":939,"mtime":1612936985388,"results":"23","hashOfConfig":"19"},{"size":8635,"mtime":1612936181882,"results":"24","hashOfConfig":"19"},{"size":4466,"mtime":1612846275966,"results":"25","hashOfConfig":"19"},{"size":333,"mtime":1609658188406,"results":"26","hashOfConfig":"19"},{"size":6492,"mtime":1612835885052,"results":"27","hashOfConfig":"19"},{"size":4122,"mtime":1612934019353,"results":"28","hashOfConfig":"19"},{"size":3307,"mtime":1612845221217,"results":"29","hashOfConfig":"19"},{"size":4417,"mtime":1612933996187,"results":"30","hashOfConfig":"19"},{"size":1991,"mtime":1612845871053,"results":"31","hashOfConfig":"19"},{"size":3289,"mtime":1612835885035,"results":"32","hashOfConfig":"19"},{"size":4530,"mtime":1612835885041,"results":"33","hashOfConfig":"19"},{"size":222,"mtime":1612835885051,"results":"34","hashOfConfig":"19"},{"size":267,"mtime":1612835885035,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ekv9lp",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\clewi\\git\\trexame\\site\\src\\index.js",[],["76","77"],"C:\\Users\\clewi\\git\\trexame\\site\\src\\App.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\serviceWorker.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\config.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Stats.js",["78","79","80","81","82"],"C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Dashboard.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Challenges.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Home.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\Admin.js",["83","84","85"],"/* eslint eqeqeq: \"off\", no-extend-native: \"off\", no-throw-literal: \"off\" */\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { config } from \"../config.js\";\r\n\r\nclass Admin extends React.Component {\r\n\r\n  state = {\r\n    challengeId: \"\",\r\n    challengeData: {},\r\n    challengeAchievements: [],\r\n    newSubmissionImage: \"\"\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getChallengeId();\r\n  }\r\n\r\n  componentDidUpdate(prevprops, prevstate) {\r\n    if (prevstate.challengeId != this.state.challengeId) {\r\n      this.getChallengeData();\r\n    }\r\n  }\r\n\r\n  getChallengeId() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    if (params && params.get(\"challenge\")) {\r\n      this.setState({ challengeId: params.get(\"challenge\") });\r\n      this.getChallengeData();\r\n    } else return false;\r\n  }\r\n\r\n  getChallengeData() {\r\n    axios.get(`${config.api}/getChallengeData?challengeId=${this.state.challengeId}&admin=true`).then(res => {\r\n      this.setState({ challengeData: res.data });\r\n      if (res.data.achievements) {\r\n        this.setState({ challengeAchievements: res.data.achievements });\r\n      }\r\n    })\r\n  }\r\n\r\n  saveData(e) {\r\n    e.preventDefault();\r\n    var challengeDataUpdated = `challengeName=${document.getElementById(\"name\").value}&targetMiles=${document.getElementById(\"miles\").value}&targetUnits=${document.getElementById(\"units\").value}&description=${document.getElementById(\"description\").value}`;\r\n    axios.get(`${config.api}/updateChallengeData?challengeId=${this.state.challengeId}&${encodeURI(challengeDataUpdated)}`).then(res => {\r\n\r\n    })\r\n\r\n  }\r\n\r\n  //TODO: Handle response on both of these.\r\n\r\n  submitNewAchievement(e) {\r\n    e.preventDefault();\r\n    var newAchivementData = `name=${document.getElementById(\"newAchievementName\").value}&distance=${document.getElementById(\"newAchievementDistance\").value}&description=${document.getElementById(\"newAchievementDescription\").value}&image=${this.state.newSubmissionImage}`;\r\n    axios.get(`${config.api}/submitNewAchievement?challengeId=${this.state.challengeId}&${encodeURI(newAchivementData)}`).then(res => {\r\n      this.getChallengeData();\r\n      document.getElementById(\"newAchievementName\").value = \"\";\r\n      document.getElementById(\"newAchievementDistance\").value = \"\";\r\n      document.getElementById(\"newAchievementDescription\").value = \"\";\r\n\r\n    })\r\n  }\r\n\r\n  handleImageUpload(e) {\r\n\r\n    e.preventDefault();\r\n    var file = e.target.files[0];\r\n    const data = new FormData();\r\n    data.append('file', file);\r\n    data.append('challengeId', this.state.challengeId);\r\n    const headerConfig = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    axios.post(`${config.api}/uploadImage?challengeId=${this.state.challengeId}`, data, headerConfig).then(res => {\r\n      if (res && res.data) {\r\n        this.setState({ newSubmissionImage: res.data });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteAchievement(achievementId) {\r\n    axios.get(`${config.api}/deleteAchievement?challengeId=${this.state.challengeId}&achievementId=${achievementId}`).then(res => {\r\n      this.getChallengeData();\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <p>Challenge Admin</p>\r\n        <br /><br />\r\n        <form id=\"challengeForm\" onSubmit={this.saveData.bind(this)}>\r\n          <div className=\"form grid-2 formWrapper\" style={{ margin: \"0 auto\", width: \"80vw\" }}>\r\n            <label>\r\n              Challenge Name:\r\n            </label>\r\n            <input type=\"text\" id=\"name\" defaultValue={this.state.challengeData.challengeName} />\r\n            <label>Target Distance:</label>\r\n            <input type=\"number\" id=\"miles\" defaultValue={this.state.challengeData.targetMiles}></input>\r\n            <label>Target Metric:</label>\r\n            <input type=\"text\" id=\"units\" defaultValue={this.state.challengeData.targetUnits}></input>\r\n            <label>Description:</label>\r\n            <textarea id=\"description\" defaultValue={this.state.challengeData.description}></textarea>\r\n          </div>\r\n          <br />\r\n          <input type=\"submit\" value=\"Update\" />\r\n        </form>\r\n        <br /><br />\r\n        <p>Challenge Achievements</p>\r\n        <br />\r\n        <form id=\"newAchivementForm\" onSubmit={this.submitNewAchievement.bind(this)}>\r\n          <div className=\"achievementEditWrapper form grid-2 formWrapper\" style={{ margin: \"0 auto\", width: \"80vw\" }}>\r\n            <label>Name:</label>\r\n            <input id=\"newAchievementName\" required>\r\n            </input>\r\n            <label>Distance (Miles): </label>\r\n            <input type=\"number\" id=\"newAchievementDistance\" required></input>\r\n            <label>Description:</label>\r\n            <textarea id=\"newAchievementDescription\"></textarea>\r\n            <label>Image:</label>\r\n            <input type=\"file\" onChange={this.handleImageUpload.bind(this)} accept=\"image/png, image/jpeg\" required></input>\r\n          </div>\r\n\r\n\r\n          <input type=\"submit\" value=\"Add New Achivement\" />\r\n          <br />\r\n\r\n        </form>\r\n        {this.state.newSubmissionImage ?\r\n          <div className=\"achievementsItemWrapper\">\r\n            <img src={`${config.uploadedImagesRoot}/${this.state.challengeId}/${this.state.newSubmissionImage}`} alt=\"New achievment preview\" style={{ width: \"150px\" }}></img>\r\n          </div>\r\n          : null}\r\n        {this.state.challengeAchievements.map(achievement => (\r\n          <form>\r\n            <div className=\"achievementEditWrapper form grid-2 formWrapper\" style={{ margin: \"0 auto\", width: \"80vw\" }}>\r\n              <label>Name:</label>\r\n              <span style={{ textAlign: \"left\" }}>\r\n                {achievement.name}\r\n              </span>\r\n              <label>Distance (Miles): </label>\r\n              <span style={{ textAlign: \"left\" }}>\r\n                {achievement.distance}\r\n              </span>\r\n              <label>Description:</label>\r\n              <span style={{ textAlign: \"left\" }}>{achievement.description}</span>\r\n              <label>Image:</label>\r\n              <img src={`${config.uploadedImagesRoot}/${this.state.challengeId}/${achievement.image}`} alt={`Badge for ${achievement.name}`} style={{ width: \"150px\" }} />\r\n              <label></label>\r\n              <span style={{ textAlign: \"left\" }} onClick={() => this.deleteAchievement(achievement.ident)}>Delete</span>\r\n            </div>\r\n            <br />\r\n          </form>\r\n        ))}\r\n\r\n\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Login.js",["86","87"],"C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Header.js",["88","89","90"],"import React, {useEffect, useState} from 'react';\r\nimport '../css/menu.css';\r\nimport { AuthCheck } from 'reactfire';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from 'firebase'\r\nimport { useAuth, useUser } from 'reactfire';\r\n\r\n\r\n/*\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n        //uncomment to get a bunch of test entries in terminal\r\n        //  document.getElementById(\"terminalData\").innerHTML = `<span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br /><span style={{ paddingLeft: \".75rem\" }}>test</span><br />`\r\n    })\r\n\r\n    */\r\n\r\n\r\n\r\nvar Header = () => {\r\n\r\n    const { data: user } = useUser();\r\n   \r\n    function logOut() {\r\n        firebase.auth().signOut().then(window.location.href = \"/\");\r\n      }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"menuWrapper\">\r\n\r\n                <div className=\"menuSubWrapper roboto\">\r\n\r\n\r\n\r\n                    {user ?\r\n                        <span className=\"user lightText\">{user.displayName}</span>\r\n                        :\r\n                        <Link to=\"/login\" className=\"user roboto\">Login</Link>\r\n                    }\r\n\r\n                    <ul id=\"menu-list\">\r\n                        <AuthCheck>\r\n                            <li><Link to=\"/challenges\">Challenges</Link></li>\r\n                            <li><Link to=\"/account\">Account</Link></li>\r\n                        </AuthCheck>\r\n\r\n                        \r\n                        {user ?\r\n                            <li className=\"signUpButton roboto\"><span onClick={logOut} style={{ cursor: \"pointer\" }} className=\"roboto\">Log Out</span></li>\r\n                            :\r\n                            <li className=\"signUpButton roboto\"><Link to=\"/signup\">Sign Up</Link></li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div id=\"menuToggle\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Signup.js",["91"],"C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\NewChallenge.js",[],"C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\Achievements.js",["92","93","94","95","96","97","98"],"/* eslint eqeqeq: \"off\", no-extend-native: \"off\", no-throw-literal: \"off\" */\r\n\r\nimport React from 'react';\r\nimport { config } from \"../config.js\";\r\n\r\nclass Achievements extends React.Component {\r\n\r\n    state = {\r\n        badges: [],\r\n        nextBadge: {},\r\n        showNextBadge: false\r\n    }\r\n\r\n    componentDidUpdate(prevprops, prevstate) {\r\n        if (prevprops.miles != this.props.miles || prevprops.marathon != this.props.marathon || prevprops.achievements != this.props.achievements || prevprops.challengeId != this.props.challengeId) {\r\n            this.getAllBadges();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllBadges();\r\n        console.log(this.props);\r\n    }\r\n\r\n\r\n    //I got confused on data structures here\r\n    //The key should be the mile marker? \r\n\r\n    getAllBadges() {\r\n        this.setState({ showNextBadge: false })\r\n\r\n        var gotNextBadge = false;\r\n\r\n        var allBadges = [];\r\n\r\n        var list = this.props.achievements;\r\n\r\n        console.log(list);\r\n     \r\n        if (list && Array.isArray(list) == true) {\r\n            for (var badge of list) {\r\n\r\n                //each 'badge' is an object\r\n                //each one has keys name, desc, image, mile\r\n\r\n                if (badge.distance && badge.distance <= this.props.miles) {\r\n                    allBadges.push(badge);\r\n                } else {\r\n                    if (gotNextBadge == false) {\r\n                        this.setState({ nextBadge: badge, showNextBadge: true });\r\n                        gotNextBadge = true;\r\n                        break;\r\n                    }\r\n                }\r\n                this.setState({ badges: allBadges });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"badgeGrid\">\r\n                {this.state.badges.map(badge =>\r\n                    <div key={badge.name}>\r\n                        <span className=\"badgeName\">{badge.name}</span><br />\r\n                        <img src={`${config.uploadedImagesRoot}/${this.props.challengeId}/${badge.image}`} alt={`${badge.name}: ${badge.desc}`}></img>\r\n                        <br />\r\n                        <span className=\"badgeDescription\">{badge.description}</span>\r\n                        <br />\r\n                        <span className=\"badgeDescription\">{badge.distance} Miles</span>\r\n                    </div>\r\n                )}\r\n                {this.state.showNextBadge == true ?\r\n                    <div>\r\n                        <span className=\"badgeName nextBadge\">{this.state.nextBadge.name}</span><br />\r\n                        <img className=\"nextBadge\" src={`${config.uploadedImagesRoot}/${this.props.challengeId}/${this.state.nextBadge.image}`} width=\"150px\" alt={`${this.state.nextBadge.name}: ${this.state.nextBadge.desc}`}></img>\r\n                        <br />\r\n                        <span className=\"badgeDescription nextBadge\">{this.state.nextBadge.description}</span>\r\n                        <br />\r\n                        <span className=\"badgeDescription\">Unlocked at {this.state.nextBadge.distance} Miles</span>\r\n                    </div>\r\n                    :\r\n\r\n                    \"\"\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Achievements;\r\n","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\ResetPassword.js",["99","100","101","102","103"],"/* eslint eqeqeq: \"off\", no-extend-native: \"off\", no-throw-literal: \"off\" */\r\n\r\nimport React, { useCallback, useState } from 'react';\r\nimport '../css/menu.css'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { config } from '../config'\r\nimport { useFirebaseApp } from 'reactfire';\r\nimport 'firebase/auth'\r\n\r\n\r\nvar ResetPassword = (props) => {\r\n\r\n    const firebase = useFirebaseApp();\r\n\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n    const [message, setMessage] = useState(null);\r\n\r\n\r\n    const sendResetEmail = event => {\r\n        event.preventDefault();\r\n        var email = document.getElementById(\"userEmail\").value;\r\n        document.getElementById(\"userEmail\").value = \"\";\r\n        \r\n        firebase.auth()\r\n            .sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setMessage(\"Please check your email for a reset link\")\r\n                setTimeout(() => { setEmailHasBeenSent(false) }, 3000);\r\n            })\r\n            .catch(() => {\r\n                setMessage(\"Error resetting password\");\r\n            });\r\n\r\n    };\r\n\r\n    function submitReset(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        axios.get(config.api + \"/resetpassword?email=\" + document.getElementById(\"email\").value).then(res => {\r\n            if (res && res.data) {\r\n                console.log(res.data);\r\n\r\n                if (res.data == true) {\r\n                    document.getElementById(\"form\").style.display = \"none\";\r\n                    document.getElementById(\"submittedText\").style.display = \"block\";\r\n                } else {\r\n                    document.getElementById(\"errorText\").style.display = \"block\";\r\n                }\r\n\r\n            }\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ margin: \"0, auto\", paddingTop: \"20px\" }}>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"width-25 w-50-md width-100-small\" style={{ padding: \"4px\" }}>\r\n                    <h3 className=\"title center\">Reset Password</h3>\r\n                    <form id=\"form\" className=\"signup-form\" onSubmit={sendResetEmail}>\r\n                        <div class=\"mb-4\">\r\n                            <label className=\"form-label\" htmlFor=\"email\">\r\n                                Email Address\r\n              </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"userEmail\"\r\n                                id=\"userEmail\"\r\n                                placeholder=\"Input your email\"\r\n                                className=\"width-100 px-3 py-2 form-input-shadow\"\r\n                            />\r\n                        </div>\r\n                        <div class=\"mb-6 text-center\">\r\n                            <button\r\n                                className=\"w-75 submit-button-round-blue\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Reset\r\n              </button>\r\n                        </div>\r\n                        <hr class=\"mb-6 border-t\" />\r\n                        <div id=\"alertText\"></div>\r\n\r\n                    </form>\r\n\r\n                    <div id=\"submittedText\" style={{ display: \"none\" }}>\r\n                        <p>If an account exists with that email, we'll send a link to reset your password. Be sure to check your spam folder. If you run into any issues, contact <a href=\"mailto:admin@rrderby.org\">admin@rrderby.org</a> for help.</p>\r\n                    </div>\r\n\r\n                    <div class=\"text-center\">\r\n                        <Link to=\"/signup\">\r\n                            <span\r\n                                className=\"link-text-secondary\"\r\n                            >\r\n                                No account? Create one here.\r\n              </span>\r\n                        </Link>\r\n                    </div>\r\n                    <div class=\"text-center\">\r\n                        <Link to=\"/login\"><span class=\"link-text-secondary\">Login</span></Link>\r\n                    </div>\r\n                    <div id=\"errorText\" style={{ display: \"none\" }}>\r\n                        <p>An error occured. If this persists, contact <a href=\"mailto:admin@rrderby.org\">admin@rrderby.org</a>.</p>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;","C:\\Users\\clewi\\git\\trexame\\site\\src\\pages\\AccountSettings.js",["104"],"import React from 'react';\r\nimport '../css/menu.css'\r\n\r\nvar AccountSettings = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <p>Haven't made this yet.</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AccountSettings;","C:\\Users\\clewi\\git\\trexame\\site\\src\\components\\AuthProvider.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":11,"column":10,"nodeType":"111","messageId":"112","endLine":11,"endColumn":19},{"ruleId":"109","severity":1,"message":"114","line":12,"column":10,"nodeType":"111","messageId":"112","endLine":12,"endColumn":20},{"ruleId":"109","severity":1,"message":"115","line":12,"column":22,"nodeType":"111","messageId":"112","endLine":12,"endColumn":35},{"ruleId":"109","severity":1,"message":"116","line":14,"column":12,"nodeType":"111","messageId":"112","endLine":14,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":20,"column":31,"nodeType":"119","messageId":"120","endLine":20,"endColumn":33},{"ruleId":"121","severity":1,"message":"122","line":136,"column":13,"nodeType":"123","endLine":136,"endColumn":141},{"ruleId":"121","severity":1,"message":"122","line":153,"column":15,"nodeType":"123","endLine":153,"endColumn":133},{"ruleId":"109","severity":1,"message":"110","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":101,"column":15,"nodeType":"123","endLine":101,"endColumn":96},{"ruleId":"109","severity":1,"message":"110","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"124","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":35},{"ruleId":"109","severity":1,"message":"125","line":6,"column":10,"nodeType":"111","messageId":"112","endLine":6,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":114,"column":15,"nodeType":"123","endLine":114,"endColumn":96},{"ruleId":"117","severity":1,"message":"118","line":13,"column":29,"nodeType":"119","messageId":"120","endLine":13,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":13,"column":71,"nodeType":"119","messageId":"120","endLine":13,"endColumn":73},{"ruleId":"117","severity":1,"message":"118","line":13,"column":120,"nodeType":"119","messageId":"120","endLine":13,"endColumn":122},{"ruleId":"117","severity":1,"message":"118","line":13,"column":172,"nodeType":"119","messageId":"120","endLine":13,"endColumn":174},{"ruleId":"117","severity":1,"message":"126","line":38,"column":41,"nodeType":"119","messageId":"120","endLine":38,"endColumn":43},{"ruleId":"117","severity":1,"message":"126","line":47,"column":38,"nodeType":"119","messageId":"120","endLine":47,"endColumn":40},{"ruleId":"117","severity":1,"message":"126","line":73,"column":43,"nodeType":"119","messageId":"120","endLine":73,"endColumn":45},{"ruleId":"109","severity":1,"message":"127","line":3,"column":17,"nodeType":"111","messageId":"112","endLine":3,"endColumn":28},{"ruleId":"109","severity":1,"message":"128","line":17,"column":12,"nodeType":"111","messageId":"112","endLine":17,"endColumn":17},{"ruleId":"109","severity":1,"message":"129","line":17,"column":19,"nodeType":"111","messageId":"112","endLine":17,"endColumn":27},{"ruleId":"109","severity":1,"message":"130","line":18,"column":12,"nodeType":"111","messageId":"112","endLine":18,"endColumn":28},{"ruleId":"109","severity":1,"message":"131","line":39,"column":14,"nodeType":"111","messageId":"112","endLine":39,"endColumn":25},{"ruleId":"109","severity":1,"message":"132","line":6,"column":14,"nodeType":"111","messageId":"112","endLine":6,"endColumn":23},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'statsData' is assigned a value but never used.","'marathonId' is assigned a value but never used.","'setMarathonId' is assigned a value but never used.","'getMarathonId' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useAuth' is defined but never used.","Expected '===' and instead saw '=='.","'useCallback' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'emailHasBeenSent' is assigned a value but never used.","'submitReset' is defined but never used.","'aFunction' is defined but never used.","no-global-assign","no-unsafe-negation"]